#!/bin/sh
# Copyright [2018] EMBL-European Bioinformatics Institute
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Make sure files are group writable
umask 0002

### come find yourself
THISSCRIPT=`basename $0`
ILIVEIN=`dirname $0` # this is where the script lives. can cd there.
CVSBASE=..

## get to cvs check outs directory
cd $ILIVEIN/$CVSBASE/..

root=`\pwd -P`
pid_file=$root/ensembl-otter/otter_srv.pid

OLD_PERL5LIB="$PERL5LIB"

PERL5LIB=\
$root/ensembl-otter/modules:\
$root/ensembl/modules:\
$root/ensembl_head/modules:\
$root/ensembl-compara/modules:\
$root/bioperl-0.7.2:\
$root/bioperl-1.2.3-patched:\
$root/biodas-1.02

if [ -n "$OLD_PERL5LIB" ]; then
    PERL5LIB=${PERL5LIB}:$OLD_PERL5LIB
fi

export PERL5LIB

HOME=$root

export HOME

cd ensembl-otter/scripts

die(){
    echo "[$THISSCRIPT] $1" 1>&2
    exit 1
}

message(){
    echo "[$THISSCRIPT] $1"
}

if [ -e $pid_file ]; then
    pidfile_exists=1
    pid=`cat $pid_file`
    process_info=`ps -p $pid | tail +2`
    if [ "$process_info" ]; then
        message "The server (PID=$pid) is running"
    else
        message "The server (PID=$pid) is either dead or running on a different host"
    fi
else
    pidfile_exists=0
    message "The server is not running (pidfile does not exist)"
fi

start(){
    if [ "$pidfile_exists" = "0" ]; then
        message "starting otter_srv..."
        exec ./otter_srv &
    else
        die "can't start '$pid_file' exists"
    fi
}

unlock(){
    message "Removing the file $pid_file"
    rm -f $pid_file 2>/dev/null
}

stop(){
    if [ "$pidfile_exists" = "1" ]; then
        pid=`cat $pid_file`
        if [ $pid -gt 0 ]; then
            message "pid exists so stopping $pid"
            kill -INT $pid  2>/dev/null
            if [ "$?" = "0" ]; then
                unlock
                pidfile_exists=0
                message "Successfully stopped the server"
            else
                die "Failed to 'kill -INT $pid' it is probably not owned by you."
            fi
        else
            die "'$pid_file' is not a valid pid file"
        fi
    else
        die "no pidfile [$pid_file] exists, so can't stop"
    fi
}

rotate_log(){
    if [ "$pidfile_exists" = "1" ]; then
        pid=`cat $pid_file`
        if [ $pid -gt 0 ]; then
            message "rotating logs..."
            kill -HUP $pid 2>dev/null
            if [ "$?" = "0" ]; then
                message "successfully rotated logs."
            else
                die "Failed to 'kill -HUP $pid' it is probably not owned by you."                
            fi
        else
            die "'$pid_file' is not a valid pid file."
        fi
    else
        die "no pidfile [$pid_file] exists, so can't do rotate."
    fi
}

help(){
    message "Usage: $THISSCRIPT {start|stop|logrotate|restart|unlock}"
}

restart(){
    stop
    start
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  logrotate)
    # rotate_log
    ;;
  restart)
    restart
    ;;
  unlock)
    message "You should know what you are doing!"
    unlock
    ;;
  *)
    help
esac
