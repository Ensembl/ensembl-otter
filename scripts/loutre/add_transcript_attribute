#!/usr/bin/env perl
# Copyright [2018] EMBL-European Bioinformatics Institute
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


### add_transcript_attribute

use strict;
use warnings;
use Bio::Otter::Lace::Defaults;

{
# As used by jgrg, cvs v. 1.1
#     my $dataset_name = 'human';
#     my $attrib_type_id = 54; # remark
#     my $attrib_value   = 'confirm experimentally';

    my $dataset_name;
    my $attrib_code;
    my $attrib_value;

    my $usage = sub { exec('perldoc', $0) };
    # This do_getopt() call is needed to parse the otter config files
    # even if you aren't giving any arguments on the command line.
    Bio::Otter::Lace::Defaults::do_getopt(
        'h|help!'        => $usage,
        'dataset=s'      => \$dataset_name,
        'attrib_code=s'  => \$attrib_code,
        'attrib_value=s' => \$attrib_value,
        ) or $usage->();
    ($dataset_name and $attrib_code and $attrib_value) or $usage->();
    
    # Client communicates with otter HTTP server
    my $cl = Bio::Otter::Lace::Defaults::make_Client();
    
    # DataSet interacts directly with an otter database
    my $ds = $cl->get_DataSet_by_name($dataset_name);
    
    my $otter_dbc = $ds->get_cached_DBAdaptor->dbc;
    
    my $get_db_id = $otter_dbc->prepare(q{
        SELECT transcript_id
        FROM transcript
        WHERE is_current = 1
          AND stable_id = ?
    });
    my $count_attrib = $otter_dbc->prepare(qq{
        SELECT count(*)
        FROM transcript_attrib ta
        JOIN attrib_type       at
        USING (attrib_type_id)
        WHERE ta.transcript_id = ?
          AND at.code          = ?
          AND ta.value         = ?
    });
    my $insert_attrib = $otter_dbc->prepare(q{
        INSERT transcript_attrib (transcript_id, attrib_type_id, value)
        VALUES (?,
                (SELECT attrib_type_id FROM attrib_type WHERE code = ?),
                ?)
    });
    
    while (<>) {
        foreach my $stable_id (split) {
            $get_db_id->execute($stable_id);
            my ($db_id) = $get_db_id->fetchrow;
            unless ($db_id) {
                warn "No current transcript with stable ID '$stable_id'\n";
                next;
            }
            $count_attrib->execute($db_id, $attrib_code, $attrib_value);
            my ($count) = $count_attrib->fetchrow;
            if ($count) {
                warn "Attrib $attrib_code '$attrib_value' already set for transcript '$stable_id'\n";
                next;
            }
            $insert_attrib->execute($db_id, $attrib_code, $attrib_value);
            warn "Added attrib $attrib_code '$attrib_value' to transcript '$stable_id'\n";
        }
    }
}




__END__

=head1 NAME

 add_transcript_attribute

=head1 SYNOPSIS

 add_transcript_attribute                               \
     --dataset      mouse                               \
     --attrib_code  hidden_remark                       \
     --attrib_value 'Annotation transfer: missing_UTRs' \
   list_of_ts_stable_ids.txt

=head1 DESCRIPTION

Add a specified transcript attribute to each of the 
transcripts specified by stable id in the input file
or standard input.

=head1 AUTHOR

James Gilbert B<email> jgrg@sanger.ac.uk
Michael Gray B<email> mg13@sanger.ac.uk

