#!/usr/bin/env perl
# Copyright [2018-2022] EMBL-European Bioinformatics Institute
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


### prefix_genes

use strict;
use warnings;

use Bio::Otter::Lace::Defaults;
use Bio::Otter::Server::Config;

{
    my $dataset_name = 'pig';
    my $prefix       = 'IRAG';

    my $usage = sub { exec('perldoc', $0) };
    # This do_getopt() call is needed to parse the otter config files
    # even if you aren't giving any arguments on the command line.
    Bio::Otter::Lace::Defaults::do_getopt(
        'h|help!'       => $usage,
        'dataset=s'     => \$dataset_name,
        'prefix=s'      => \$prefix,
        ) or $usage->();
    $usage->() unless $dataset_name;
    
    # DataSet interacts directly with an otter database
    my $ds = Bio::Otter::Server::Config->SpeciesDat->dataset($dataset_name);

    my $otter_dba = $ds->otter_dba;
    my $dbc = $otter_dba->dbc;

    my $gene_sth = $dbc->prepare(q{
        SELECT g.gene_id, ga.value as name
        FROM gene g
          , gene_attrib ga
        WHERE g.gene_id = ga.gene_id
          AND g.is_current = 1
          AND ga.attrib_type_id = 4
          AND g.stable_id = ?
        });

    my $update_gene = $dbc->prepare(q{
        UPDATE gene SET source = ? WHERE gene_id = ?
    });
    my $update_gene_name = $dbc->prepare(q{
        UPDATE gene_attrib SET value = ? WHERE attrib_type_id = 4 AND gene_id = ?
    });
    my $update_tsct_name = $dbc->prepare(q{
        UPDATE transcript_attrib SET value = ? WHERE attrib_type_id = 4 AND transcript_id = ?
    });

    my $tsct_sth = $dbc->prepare(q{
        SELECT t.transcript_id, ta.value as name
        FROM transcript t
          , transcript_attrib ta
        WHERE t.transcript_id = ta.transcript_id
          AND ta.attrib_type_id = 4
          AND t.gene_id = ?
        }
    );

    $otter_dba->begin_work;

    while (<>) {
        foreach my $stable_id (split) {
            $gene_sth->execute($stable_id);
            unless ($gene_sth->rows == 1) {
                printf STDERR "ERROR: Got %d current genes for stable ID %s\n", $gene_sth->rows, $stable_id;
                next;
            }
            my ($gene_id, $gene_name) = $gene_sth->fetchrow;
            print "GENE: $gene_id\t$gene_name\n";

            $update_gene->execute($prefix, $gene_id);
            $update_gene_name->execute("$prefix:$gene_name", $gene_id);

            $tsct_sth->execute($gene_id);
            while (my ($tsct_id, $tsct_name) = $tsct_sth->fetchrow) {
                print "  TSCT: $tsct_id\t$tsct_name\n";
                $update_tsct_name->execute("$prefix:$tsct_name", $tsct_id);
            }
        }
    }

    $otter_dba->commit;
}




__END__

=head1 NAME - prefix_genes

=head1 AUTHOR

=head1 DESCRIPTION

Written to prefix genes described in:

  https://rt.sanger.ac.uk/Ticket/Display.html?id=287536

James Gilbert B<email> jgrg@sanger.ac.uk

