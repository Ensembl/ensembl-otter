#!/usr/bin/env perl
# Copyright [2018-2019] EMBL-European Bioinformatics Institute
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#<sequence_fragment>
#  <accession>AL035696.14.1.124034</accession>
#  <chromosome>6</chromosome>
#  <assembly_start>131702</assembly_start>
#  <assembly_end>253735</assembly_end>
#  <fragment_ori>1</fragment_ori>
#  <fragment_offset>2001</fragment_offset>
#</sequence_fragment>

#chr14       415988          582668        5     F       AL512310.3          168774            2094      -
#chr14       582669          719153        6     F       AL391156.3          136600             116      -
#chr14       719154          875145        7     F       AL359218.4          156320             329      -

my $chr = $ARGV[0];
open (IN,"<$ARGV[1]");

while (<IN>) {
  chomp;
  $_ =~ s/ //g;

  next if (/^#/);

  my @arr = split(/\t/,$_);
 
  next if ($arr[4] eq "N");
 
  my ($acc,$ver) = split(/\./,$arr[5]);
  
  my $start = $arr[6];
  my $end   = $arr[7];
  
  if ($end < $start) {
    my $tmp = $end;
    $end = $start;
    $start = $tmp;
  }
  
  my $id = $acc . "." . $ver . "." . $start . "." . $end;
  
  my $ori = -1;
  
  if ($arr[8] eq "+") {
     $ori = 1;
  } 
  
  print "<sequence_fragment>\n";
  print "  <accession>$id</accession>\n";
  print "  <chromosome>$chr</chromosome>\n";
  print "  <assembly_start>" . $arr[1] . "</assembly_start>\n";
  print "  <assembly_end>"   . $arr[2] . "</assembly_end>\n";
  print "  <fragment_ori>"   . $ori    . "</fragment_ori>\n";
  print "  <fragment_offset>" . $start . "</fragment_offset>\n";
  print "<sequence_fragment>\n";
}
