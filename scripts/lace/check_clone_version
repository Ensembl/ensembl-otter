#!/usr/bin/env perl
# Copyright [2018-2019] EMBL-European Bioinformatics Institute
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


use strict;
use warnings;


### author: ck1
### check version of clones in AGP is in sync with pfetch server

print "Give path of AGP file(s) as argument\n\n" unless $ARGV[0];
print "\nChecking sequence version of clones in AGP . . .\n\n";

foreach my $agp ( @ARGV ) {

  open(my $agp_fh, '<', $agp) or die $!;

  my $diff = 0;
  my $fh;
  my $cmd;
  my ($acc,$ver);
  my %acc_ver;
  
  # Store accession/version in a hash
  while (<$agp_fh>) {
    chomp;
    # agp format:
    # chr11   1       176646  1       F       CR933541.6      1       176646  +

    my @fields = split(/\t/, $_);
    my $acc_ori = $fields[5];
    if($fields[4] eq 'N') { next };
    ($acc,$ver) = $acc_ori =~ /^(\S+)\.(\d+)/;
    $acc_ver{$acc} = $ver;
  }
  close($agp_fh);
  
  # Pfetch the description of all accession in one block and compare the version
  $cmd = "pfetch -D ".join(" ",keys %acc_ver);
  open($fh,'-|',$cmd) or die("Error running command $cmd\n$!");
  while(<$fh>){
    my @acc_desc = split(/\s+/,$_);
    my $acc_test = $acc_desc[1];
    chomp $acc_test;
    my ($acc,$ver) = $acc_test =~ /^(\S+)\.(\d+)/;
    if ( $acc_test !~ /^\d+/ && $ver ne $acc_ver{$acc} ) {
      $diff = 1;
      print "Version diff:\n";
      printf("\t%-8s\t%s\n", "AGP:", $acc.$acc_ver{$acc});
      printf("\t%-8s\t%s\n", "Pfetch:", $acc_test);
    }
  }
  close $fh;

  print "$agp AGP is up-to-date\n" if $diff == 0 ;
}
print "\n";
