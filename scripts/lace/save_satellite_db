#!/usr/bin/env perl
# Copyright [2018-2022] EMBL-European Bioinformatics Institute
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


### save_satellite_db

use strict;
use warnings;

use Bio::Otter::Lace::SatelliteDB;
use Bio::Otter::Lace::Defaults;
use Bio::Otter::Server::Config;

{
    my (
      $help, $key, $view,
      $sathost, $satport, $satuser, $satpass, $satdbname
      );
    my $dataset_name = 'human';
    Bio::Otter::Lace::Defaults::do_getopt(
        'h|help!'     => \$help,
        'key=s'       => \$key,
        'show|view!'  => \$view,
        'sathost=s'   => \$sathost,
        'satport=s'   => \$satport,
        'satuser=s'   => \$satuser,
        'satpass=s'   => \$satpass,
        'satdbname=s' => \$satdbname,
        'dataset=s'   => \$dataset_name,
      )
      || usage();
    usage() if $help;
    die "Key not given" unless $key;

    my $ds       = Bio::Otter::Server::Config->SpeciesDat->dataset($dataset_name);
    my $otter_db = $ds->otter_dba;

    my $current =
      Bio::Otter::Lace::SatelliteDB::get_options_for_key($otter_db, $key);
    if ($view) {
        print STDERR show_current($current, "original $dataset_name $key");
    }
    my $sat_opts = $current || {};
    $sat_opts->{'-HOST'}   = $sathost   if $sathost;
    $sat_opts->{'-PORT'}   = $satport   if $satport;
    $sat_opts->{'-USER'}   = $satuser   if $satuser;
    $sat_opts->{'-PASS'}   = $satpass   if defined $satpass;
    $sat_opts->{'-DBNAME'} = $satdbname if $satdbname;

    # so we can use undefined password
    unless ($satpass or $sat_opts->{'-PASS'}) {
        delete($sat_opts->{'-PASS'});
    }

    # Check we can connect to the Satellite database with options supplied
    eval {
        my $sat_db = Bio::EnsEMBL::DBSQL::DBAdaptor->new(%$sat_opts);
        my $sth = $sat_db->dbc->prepare(q{SELECT meta_value FROM meta WHERE meta_key = 'assembly.default'});
        $sth->execute;
        while (my ($value) = $sth->fetchrow) {
            print STDERR "  assembly.default = '$value'\n";
        }
        $sat_db = undef;
    };
    if ($@) {
        die "Test it: Couldn't connect to SatelliteDB selected:\n"
          . show_current($sat_opts, "new $dataset_name $key")
          . $@;
    } else {
        print "\t\tTest it: OK\n" if $view;
    }

    exit 0 if $view;

    # delete the key
    Bio::Otter::Lace::SatelliteDB::remove_options_hash_for_key($otter_db, $key);

    # replace with new version
    Bio::Otter::Lace::SatelliteDB::save_options_hash($otter_db, $key,
        $sat_opts);

}

sub show_current {
    my ($settings, $name) = @_;

    my $ret = "Settings for $name:\n";
    foreach my $key (sort keys %$settings) {
        $ret .= sprintf "%12s = %s\n", $key, $settings->{$key};
    }
    $ret .= "  (nothing)\n" unless keys %$settings;
    return $ret;
}

#---------
sub usage { exit(exec("perldoc", $0)) }

__END__

=head1 NAME - save_satellite_db

=head1 SYNOPSIS

 ./save_satellite_db -key <key> -dataset <dataset> [-show] [-satdb* options]

=head1 DESCRIPTION

    Saves the connection hash for a satellite database for 
the otter server under the B<key>.  By default it uses the options 
already stored in the database for the B<key>.

=head1 USAGE

    help           - print this pod
    key (required) - meta_key to use in the meta table
    dataset (req)  - otter dataset to use [human]
    show           - view the current settings
    sathost        - host for the satellite DB
    satport        - port for the satellite DB
    satuser        - user for the satellite DB
    satpassword    - pass for the satellite DB
    satdbname      - dbname for the satellite DB

=head1 EXAMPLE

    ./save_satellite_db -dataset zebrafish -key pipeline_db -sathost ecs2 -satport 3310 -satuser ensro

=head1 AUTHOR

Ana Code B<email> anacode@sanger.ac.uk

