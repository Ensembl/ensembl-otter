#!/usr/bin/env perl
# Copyright [2018] EMBL-European Bioinformatics Institute
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


#chr14            1          106333        1     F       AL603712.1          130305           23973      -
#chr14       106334          169641        2     F       AL589743.4          125813           62506      -
#chr14       169642          318764        3     F       AL589182.2          149723             601      -
#chr14       318765          415987        4     F       AL512624.4           55924          153146      +
#chr14       415988          582668        5     F       AL512310.3          168774            2094      -
#chr14       582669          719153        6     F       AL391156.3          136600             116      -

use strict;
use Getopt::Long;

$| = 1;

my $chrname  = 14;
my $path     = 'GENOSCOPE';
my $agpfile  = undef;
my $logfile  = undef;
my $outfile  = undef;
my $startid  = 1;
my $seqdir   = undef;
my $chrid    = 1;

&GetOptions( 'chromosome:s'   => \$chrname,
             'chrid:n'  => \$chrid,
             'path:s'  => \$path,
             'agp:s'   => \$agpfile,
             'log:s'   => \$logfile,
             'out:s'   => \$outfile,
             'startid:n' => \$startid,
             'seqdir:s'  => \$seqdir,
            );

if (!defined($chrname) || !defined($agpfile) || !defined($path)) {
  die "Missing required args\n";
}

if (defined($logfile)) {
  open (FPERR, ">$logfile");
} else {
  open (FPERR, ">&STDERR");
}

if (defined($outfile)) {
  open (FPOUT, ">$outfile");
} else {
  open (FPERR, ">&STDOUT");
}

my %contigs;

if ($chrname =~ /^[0-9]*$/) {
  $chrid = $chrname;
}

open(IN,"<$agpfile");

my $contignum = $startid;
my $clonenum  = $startid;
my $dnanum    = $startid;
while (<IN>) {
  chomp;
  $_ =~ s/\ //g;
  my @arr = split(/\t/,$_);

  next if ($arr[4] eq "N");
  next if (/^#/);

  my $chrstart = $arr[1];
  my $chrend   = $arr[2];
  my $accver   = $arr[5];
  my $accstart = $arr[6];
  my $accend   = $arr[7];
  my $accori   = $arr[8];

  if ($accend < $accstart) {
    my $tmp = $accend;
    $accend = $accstart;
    $accstart = $tmp;
  }
 
 print FPERR "Accver $accver\n"; 
  my ($acc,$version)  = split(/\./,$accver);

  print FPERR "Looking for $acc : $version\n";

  open(IN2,"pfetch $acc |");

  my $seq;
  my $found;

  while (<IN2>) {

    if (/^>(\S+) (\S+)/) {
      print FPERR "Found title line $1 : $2\n";

      if ($2 eq $accver) {
	$found = 1;
      }
    } else {
      chomp;
      $seq .= $_;
    }
  }

  close(IN2);

  if ($found == 0) {
    $seq = "";
    print FPERR "Doing archive pfetch for $accver\n";
    open(IN2,"pfetch -A $accver |");
    while (<IN2>) {
  
      if (/^>(\S+) (\S+)/) {
        print FPERR "Found title line $1 : $2\n";
  
        if ($2 eq $accver) {
  	  $found = 1;
        }
      } else {
        chomp;
        $seq .= $_;
      }
    }
    close(IN2);
  }
  if (!$found && $seqdir) {
    $seq = "";
    my $fname = "$seqdir/$accver.fa";
    print FPERR "Doing seqdir search for $fname\n";
    if ( -e $fname ) {
      open(IN2,"<$fname");
      while (<IN2>) {
        
        if (/^>(\S+) (\S+)/) {
          print FPERR "Found title line $1 : $2\n";
          if ($found) {
            last;
          }
          $seq = "";
          if ($2 eq $accver) {
            $found = 1;
          }
        } else {
          chomp;
          $seq .= $_;
        }
      }
      close(IN2);
    }
  }

  if ($found != 1) {
    print FPERR "ERROR: Can't find right sequence version for $acc $version\n";
  } else {
    my $contigid = $acc . "." . $version . "." . $accstart . "." . $accend;
    my $len = length($seq);
    
    my $strand = 1;
    if ($accori eq "-") {
      $strand = -1;
    }
    
    print FPERR "Length : $len\n";

    print FPOUT "insert into assembly(chromosome_id,chr_start,chr_end,superctg_name,superctg_start,superctg_end,superctg_ori,contig_id,contig_start,contig_end,contig_ori,type) values($chrid,$chrstart,$chrend,\'$chrname\',$chrstart,$chrend,1,$contignum,$accstart,$accend,$strand,\'$path\');\n";
    print FPOUT "insert into clone(clone_id,name,embl_acc,version,embl_version,htg_phase,created,modified) values($clonenum,'$acc','$acc',$version,$version,4,now(),now());\n";
    print FPOUT "insert into contig(contig_id,name,clone_id,length,embl_offset,dna_id) values($contignum,'$contigid',$clonenum,$len,1,$dnanum);\n";
    
    print FPOUT "insert into dna(dna_id,sequence,created) values($dnanum,'$seq',now());\n";
    
    $contignum++;
    $clonenum++;
    $dnanum++;
  }
}
close FPERR;
close FPOUT
