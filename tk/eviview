#!/usr/bin/env perl
# Copyright [2018-2019] EMBL-European Bioinformatics Institute
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


use strict;
use warnings;


# Collect the EviChains that match in a particular area,
# combine them into matching chains
# and show them to the user.
#
# lg4

my $enshead     = 1;
my $proteins_on = 1;

use Bio::Otter::Lace::Defaults;

use Evi::EviCollection;
use Evi::EviDisplay;
use Evi::Tictoc;

{
    my $dataset_name    = 'test_human'; # 'test_human';      # 'mouse', ...

        # my ($set_name, $chr_name, $trstable) = ('MHC_COX', '6', 'OTTHUMT00000076915');
        # my ($set_name, $chr_name, $trstable) = ('ChrX-07', 'X', 'OTTHUMT00000081638');   # fwd strand
        # my ($set_name, $chr_name, $trstable) = ('encode_ext_agp-04', 'MANY', 'OTTHUMT00000132895');
        # my ($set_name, $chr_name, $trstable) = ('chr9-16', '9', 'OTTHUMT00000001011');
        # my ($set_name, $chr_name, $trstable) = ('chr22-02', '22', 'OTTHUMT00000074916');
          my ($set_name, $chr_name, $trstable) = ('chr22-02', '22', 'OTTHUMT00000075000'); # rev strand


    my $margin          = 5000;        # any number > 0
    my @rna_analyses  = ('vertrna','Est2genome_human','Est2genome_mouse','Est2genome_other');
    my @protein_analyses = $proteins_on ? ('Uniprot') : ();

    Bio::Otter::Lace::Defaults::do_getopt(
        'dataset=s'     => \$dataset_name,
        'set=s'         => \$set_name,
        'chr=s'         => \$chr_name,
        'trstable=s'    => \$trstable,
        'margin=s'      => \$margin,
    );
    
    # Client communicates with otter HTTP server
    my $cl = Bio::Otter::Lace::Defaults::make_Client();

    # DataSet interacts directly with an otter database
    my $ds = $cl->get_DataSet_by_name($dataset_name);
    
    my $otter_dba = $ds->get_cached_DBAdaptor;

    my $otter_slice;

    if(0) { # different ways to produce a slice on a chromosome
        my $start=153_236_054;
        my $end  =153_300_000;

        $otter_slice = $otter_dba->get_SliceAdaptor()->fetch_by_chr_start_end($chr_name,$start,$end);
    } else {
        $otter_slice = $otter_dba->get_SliceAdaptor()->fetch_by_transcript_stable_id($trstable, $margin);
    }

my $tt_evicoll = Evi::Tictoc->new("Building the evidence collection");
    # my $evi_coll = Evi::EviCollection->new_from_otter_Slice(
    my $evi_coll = Evi::EviCollection->new_from_client_dataset_otterslice( $cl, $ds,
            $otter_slice, [ @rna_analyses ], [@protein_analyses], $enshead );

        if(! $evi_coll->pipeline_slice->adaptor->db) {
                warn "\n[DATABASE ADAPTOR LOST] ";
        } else {
                warn "\n[DATABASE ADAPTOR STILL ALIVE] ";
                print $evi_coll->pipeline_dba()."\n\n";
        }
$tt_evicoll->done();

    my $mw = CanvasWindow::MainWindow->new('EviView| Choose a transcript to work on');
    my $mcw = MenuCanvasWindow->new($mw);

    my $genes = $otter_dba->get_GeneAdaptor->fetch_by_Slice($otter_slice);
    for my $gene (@$genes) {
        for my $transcript (@{ $gene->get_all_Transcripts() }) {
            my $gene_name  = $gene->gene_info()->name()->name();
            my $trans_name = $transcript->transcript_info()->name();
            my $title = "${gene_name} || ${trans_name}";

            $mcw->canvas()->Button(
                    -text => $title,
                    -command => sub{
                        Evi::EviDisplay->new($mw,"EviView| $title",$evi_coll,$transcript);
                    },
            )->pack(
                    -fill=>'x',
                    -expand=>1,
            );
        }
    }
    $mcw->fix_window_min_max_sizes();

    Tk::MainLoop();
}

__END__

=head1 NAME - eviview

=head1 AUTHOR

Leo Gordon B<email> lg4@sanger.ac.uk

