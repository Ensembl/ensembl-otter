#!/usr/bin/env perl
# Copyright [2018] EMBL-European Bioinformatics Institute
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


use strict;
use warnings;


### draw_peri_contigs

use Bio::Otter::Lace::Defaults;
use GenomeCanvas;
use GenomeCanvas::Band::ContigCartoon;
use GenomeCanvas::Band::GeneKey;

{
    my @ctg_names = qw{
        99
        1001
        1002
        1003
        1004
        1005
        1006
        1007
        1008
        1009
        1010
        1011
        1012
        1013
        1014
        1015
        1016
        1017
        
        1019
        1020
        1021
        1022
        1023
        1024
        1025
        1026
        1027
        1028
        1029
        1030
        1031
        1032
        1033
        100
        };

    my $dataset_name = 'human';
    my $set_name = 'chr9-peri-17';

    my $usage = sub { exec('perldoc', $0) };
    Bio::Otter::Lace::Defaults::do_getopt(
        'h|help!'       => $usage,
        'dataset=s'     => \$dataset_name,
        'set|chr=s'     => \$set_name,
        ) or $usage->();
    $usage->() unless $dataset_name and $set_name;
    
    # Client communicates with otter HTTP server
    my $cl = Bio::Otter::Lace::Defaults::make_Client();
    
    # DataSet interacts directly with an otter database
    my $ds = $cl->get_DataSet_by_name($dataset_name);
    
    # SequenceSet contains a list of CloneSequence objects
    # in the assembly.
    my $ss = $ds->get_SequenceSet_by_name($set_name);
    $ds->fetch_all_CloneSequences_for_SequenceSet($ss);
    my $ctg_list = $ss->CloneSequence_contigs_split_on_gaps;
    
    my $otter_dba = $ds->get_cached_DBAdaptor;
    my $otter_slice_aptr = $otter_dba->get_SliceAdaptor;
    my $pipe_dba = Bio::Otter::Lace::PipelineDB::get_pipeline_DBAdaptor($otter_dba);
    
    my $mw = CanvasWindow::MainWindow->new;
    $mw->title('Chr 9 Pericentromeric contigs');
    my $gc = GenomeCanvas->new($mw);
    #$gc->font_size(18);
    $gc->landscape(0);

    unless (@ctg_names == @$ctg_list) {
        die sprintf "Have %d contigs names but %d contigs from database",
            scalar(@ctg_names), scalar(@$ctg_list);
    }
    
    my $styles = GenomeCanvas::Band::ContigCartoon
      ->read_config_file('peri_contig_features_240806.txt');
    
    #use Data::Dumper;
    #die Dumper($styles);
    
    my $key = GenomeCanvas::Band::GeneKey->new;
    $key->styles($styles);
    $key->title('Key');
    $gc->add_Band($key);

    for (my $i = 0; $i < @$ctg_list; $i++) {
        my $name = 'Ctg ' . $ctg_names[$i];
        my $ctg = $ctg_list->[$i];
        my ($chr, $start, $end) = $cl->chr_start_end_from_contig($ctg);
        print STDERR "$name: $chr $start -> $end\n";
        
        my $ctg_style = $styles->{'feature'}{$name}
          or die "No data for '$name'";
        
        my $vc = $otter_slice_aptr->fetch_by_chr_start_end($chr, $start, $end);
        
        my $cartoon = GenomeCanvas::Band::ContigCartoon->new;
        $cartoon->title($name);
        $cartoon->virtual_contig($vc);
        $cartoon->Client($cl);
        $cartoon->DataSet($ds);
        $cartoon->styles($styles);
        
        $gc->add_Band($cartoon);
    }

    $gc->residues_per_pixel(2000);
    $gc->render;
    $gc->set_scroll_region;
    $gc->fix_window_min_max_sizes;
    
    $gc->canvas->toplevel->bind('<Control-p>', sub {
        warn "Printed to files:\n",
            map "  $_\n", $gc->print_postscript($set_name);
        });
    
    Tk::MainLoop();
}




__END__

=head1 NAME - draw_peri_contigs

=head1 AUTHOR

James Gilbert B<email> jgrg@sanger.ac.uk


Attached is my summary of the content of all
contigs. This is hand drawn and I know it contains
errors, but it is there or thereabouts.

From left to right, aligning contigs against the
following genes should include all contigs, and
indicate orientation of most:

CASPR3
C9orf36
ZNF658 (ZNF91 related in my drawing)
Fk506pseudogene (and neighbouring CASPR3 fragment 2 - 746-196aa)
CASPR3 fragment 3 (849-1074aa)
RPL7A
ANKKRD26
AQP7
COB-W
PGM5
- and Satellites alpha, 5 (with LTR array), 2 and REP522/TAR

Any other "known" gene would ned to be shown, and
any pseudogenes from above list could be removed
if they become redundant.

The two fragments of the CASPR3 gene are actually
important - they are annotated as processed
pseudogenes of CASPR4 - but I've had a good look
and there is intron/exon structure, and I think
they are CASPR3 related. This makes sense in terms
of their position, and helps to explain the
evolution of the region - genes jumping into a
CASPR3 pseudogene, and then the whole array being
duplicated.

I hope this is clear - and I know this may not
actually be possible - or it may be possible, but
far too much effort for anyone to attempt. I'm off
to LA for a week or so, so any questions/opinions
will have to wait until then.


